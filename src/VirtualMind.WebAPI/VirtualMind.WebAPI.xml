<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtualMind.WebAPI</name>
    </assembly>
    <members>
        <member name="T:VirtualMind.WebAPI.App.Controllers.BaseController">
            <summary>
            Base controller
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Controllers.BaseController.#ctor(Microsoft.Extensions.Logging.ILogger{VirtualMind.WebAPI.App.Controllers.BaseController})">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Controllers.BaseController.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.String,System.String)">
            <summary>
            Response Wrapper
            </summary>
            <typeparam name="T"></typeparam>
            <param name="method"></param>
            <param name="errorMessage"></param>
            <param name="successMessage"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Controllers.CurrencyController">
            <summary>
            Currency controller
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Controllers.CurrencyController.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{VirtualMind.WebAPI.App.Controllers.CurrencyController})">
            <summary>
            Constructor
            </summary>
            <param name="mediator"></param>
            <param name="logger"></param> 
        </member>
        <member name="M:VirtualMind.WebAPI.App.Controllers.CurrencyController.GetCurrencyExchange(System.String)">
            <summary>
            Return currency exchange 
            </summary>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Controllers.CurrencyController.ExchangeTransaction(VirtualMind.WebAPI.App.Models.ExchangeTransactionInput)">
            <summary>
            Creates a transaction
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Cqs.LoggingBehavior`2">
            <summary>
            Logging behavior class, implements the <see cref="T:MediatR.IPipelineBehavior`2"/>
            interface from MediatR
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.LoggingBehavior`2.#ctor(Microsoft.Extensions.Logging.ILogger{VirtualMind.WebAPI.App.Cqs.LoggingBehavior{`0,`1}})">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.LoggingBehavior`2.Handle(`0,System.Threading.CancellationToken,MediatR.RequestHandlerDelegate{`1})">
            <summary>
            Handler method
            </summary>
            <param name="request"></param>
            <param name="cancellation"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Cqs.CreateTransactionAsyncCmd">
            <summary>
            Create transaction command
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.CreateTransactionAsyncCmd.#ctor(VirtualMind.WebAPI.App.Models.ExchangeTransactionInput)">
            <summary>
            Constructor
            </summary>
            <param name="request"></param>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Cqs.CreateTransactionAsyncCmd.TransactionInput">
            <summary>
            Transaction Input
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Cqs.CreateTransactionAsyncCmdHandler">
            <summary>
            Create transaction command handler
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.CreateTransactionAsyncCmdHandler.#ctor(VirtualMind.WebAPI.Infrastructure.Proxies.ICurrencyProxy,VirtualMind.WebAPI.Infrastructure.Proxies.ITransactionProxy)">
            <summary>
            Constructor
            </summary>
            <param name="providerProxy"></param>
            <param name="transactionProxy"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.CreateTransactionAsyncCmdHandler.Handle(VirtualMind.WebAPI.App.Cqs.CreateTransactionAsyncCmd,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.App.Cqs.GetCurrencyExchangeQuery">
            <summary>
            Currency Exchange Query
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.GetCurrencyExchangeQuery.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currency"></param>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Cqs.GetCurrencyExchangeQuery.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Cqs.GetCurrencyExchangeQueryHandler">
            <summary>
            Currency Exchange Handler
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.GetCurrencyExchangeQueryHandler.#ctor(VirtualMind.WebAPI.Infrastructure.Proxies.ICurrencyProxy)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Cqs.GetCurrencyExchangeQueryHandler.Handle(VirtualMind.WebAPI.App.Cqs.GetCurrencyExchangeQuery,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.App.DependencyInjection.MediatorModule">
            <summary>
            Mediator module with Autofac
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.DependencyInjection.MediatorModule.Load(Autofac.ContainerBuilder)">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.App.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.DependencyInjection.ServiceCollectionExtensions.AddDependendcies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add Dependencies
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.App.DependencyInjection.ServiceCollectionExtensions.RegisterSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Mappings.TransactionMaps">
            <summary>
            Transaction maps profile
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Mappings.TransactionMaps.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Models.ApiResponse`1">
            <summary>
            Api response class
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Models.ApiResponse`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ApiResponse`1.Data">
            <summary>
            Data response
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ApiResponse`1.Messages">
            <summary>
            Messages
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Models.ApiResponse`1.AddSuccessMessage(System.String)">
            <summary>
            Add Success Message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Models.ApiResponse`1.AddWarningMessage(System.String)">
            <summary>
            Add Warning Message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Models.ApiResponse`1.AddErrorMessage(System.String)">
            <summary>
            Add Error Message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.App.Models.ApiResponse`1.AddMessage(System.String,VirtualMind.WebAPI.App.Models.MessageType)">
            <summary>
            Add Message
            </summary>
            <param name="message"></param>
            <param name="messageType"></param>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Models.ResponseMessage">
            <summary>
            Response Message class
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ResponseMessage.MessageType">
            <summary>
            Message Type
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ResponseMessage.Message">
            <summary>
            Message string
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Models.MessageType">
            <summary>
            Enum message type
            </summary>
        </member>
        <member name="F:VirtualMind.WebAPI.App.Models.MessageType.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:VirtualMind.WebAPI.App.Models.MessageType.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:VirtualMind.WebAPI.App.Models.MessageType.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Models.CurrencyExchangeModel">
            <summary>
            Currency Exchange Model
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.CurrencyExchangeModel.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.CurrencyExchangeModel.Exchange">
            <summary>
            Exchange value
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.CurrencyExchangeModel.Date">
            <summary>
            Exchange date
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Models.CurrencyExchangeModelTransaction">
            <summary>
            Currency Exchange model for transaction
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.CurrencyExchangeModelTransaction.Threshold">
            <summary>
            Threshold
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Models.ExchangeTransactionInput">
            <summary>
            Exchange Transaction Input
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionInput.UserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionInput.PesosAmount">
            <summary>
            Amount  
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionInput.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.App.Models.ExchangeTransactionModel">
            <summary>
            Exchange transaction model
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionModel.UserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionModel.PesosAmount">
            <summary>
            Amount  
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionModel.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionModel.CurrencyExchange">
            <summary>
            Currency exchange value
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.App.Models.ExchangeTransactionModel.ExchangedAmount">
            <summary>
            Amount exchanged
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Core.Config">
            <summary>
            Config class
            </summary>
        </member>
        <member name="F:VirtualMind.WebAPI.Infrastructure.Core.Config.ROUTE_PREFFIX">
            <summary>
            Api Route prefix
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Core.GlobalExceptionFilterAttribute">
            <summary>
            Custom exception filter
            No need to do try-catch on each method
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Core.GlobalExceptionFilterAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Override from <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute"/>.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Core.ExchangeProviderSettings">
            <summary>
            Exchange providers
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.Core.ExchangeProviderSettings.Dolar">
            <summary>
            Dolar Provider
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Core.ThresholdSettings">
            <summary>
            Threshold settings
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.Core.ThresholdSettings.USD">
            <summary>
            USD
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.Core.ThresholdSettings.BRL">
            <summary>
            BRL
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Data.BaseRepository`1">
            <summary>
            Base repository class to be inherited
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:VirtualMind.WebAPI.Infrastructure.Data.BaseRepository`1._configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.Data.BaseRepository`1._connection">
            <summary>
            Db Connection
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Data.BaseRepository`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param> 
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Data.BaseRepository`1.Insert(`0)">
            <inheritdoc />
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Data.BaseRepository`1.ExecuteQuery``1(System.Func{System.Data.Common.DbConnection,System.Threading.Tasks.Task{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TX"></typeparam>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Data.IRepository`1">
            <summary>
            Base DB methods
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Data.IRepository`1.Insert(`0)">
            <summary>
            Insert
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Data.ITransactionRepository">
            <summary>
            Transaction repository interface
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Data.ITransactionRepository.GetTotalTransactions(System.Int32,System.String)">
            <summary>
            Get total transaction by user, currency
            </summary>
            <param name="userId"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Data.TransactionRepository">
            <summary>
            Transaction Repository
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Data.TransactionRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{VirtualMind.WebAPI.Infrastructure.Data.TransactionRepository})">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Data.TransactionRepository.GetTotalTransactions(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.BaseRecordDbEntity">
            <summary>
            Base entity record
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.BaseRecordDbEntity.CreatedAt">
            <summary>
            Created At
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.BaseRecordDbEntity.UpdatedAt">
            <summary>
            Updated At
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.BaseRecordDbEntity.IsActive">
            <summary>
            Is record active
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.DbEntities.TransactionDbEntity">
            <summary>
            Transaction Db Entity
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.DbEntities.TransactionDbEntity.ID">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.DbEntities.TransactionDbEntity.UserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.DbEntities.TransactionDbEntity.PesosAmount">
            <summary>
            PesosAmount
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.DbEntities.TransactionDbEntity.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.DbEntities.TransactionDbEntity.CurrencyExchange">
            <summary>
            Currency exchange value
            </summary>
        </member>
        <member name="P:VirtualMind.WebAPI.Infrastructure.DbEntities.TransactionDbEntity.ExchangedAmount">
            <summary>
            Amount exchanged
            </summary>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Proxies.ICurrencyProxy">
            <summary>
            Currency provider interface
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.ICurrencyProxy.GetExchange(System.String)">
            <summary>
            GetExchange
            </summary>
            <returns></returns>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.ICurrencyProxy.GetExchangeForTransaction(System.String)">
            <summary>
            Get currency for Transaction
            </summary>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Proxies.ITransactionProxy">
            <summary>
            Transaction Proxy
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.ITransactionProxy.Insert(VirtualMind.WebAPI.App.Models.ExchangeTransactionInput,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Insert
            </summary>
            <param name="input"></param>
            <param name="exchange"></param>
            <param name="totalTransactions"></param>
            <param name="threshold"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.ITransactionProxy.GetTotalTransactions(System.Int32,System.String)">
            <summary>
            Get total transaction by user, currency
            </summary>
            <param name="userId"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Proxies.CurrencyProxy">
            <summary>
            Currency Provider proxy
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.CurrencyProxy.#ctor(System.Collections.Generic.IEnumerable{VirtualMind.WebAPI.Service.IExchange})">
            <summary>
            Constructor
            </summary>
            <param name="providers"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.CurrencyProxy.GetExchange(System.String)">
            <inheritdoc />
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.CurrencyProxy.GetExchangeForTransaction(System.String)">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.Infrastructure.Proxies.TransactionProxy">
            <summary>
            Transaction Proxy class
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.TransactionProxy.#ctor(AutoMapper.IMapper,VirtualMind.WebAPI.Infrastructure.Data.ITransactionRepository,Microsoft.Extensions.Logging.ILogger{VirtualMind.WebAPI.Infrastructure.Proxies.TransactionProxy})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.TransactionProxy.Insert(VirtualMind.WebAPI.App.Models.ExchangeTransactionInput,System.Decimal,System.Decimal,System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:VirtualMind.WebAPI.Infrastructure.Proxies.TransactionProxy.GetTotalTransactions(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.Program">
            <summary>
            Program class
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Program.Main(System.String[])">
            <summary>
            Main entry point
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.Program.CreateHostBuilder(System.String[])">
            <summary>
            Create host
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.Service.IExchange">
            <summary>
            Exchange interface
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Service.IExchange.IsCurrency(System.String)">
            <summary>
            Verifies if currency input is implemented
            </summary>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualMind.WebAPI.Service.IExchange.GetExchange">
            <summary>
            Get currency exchange
            </summary>
            <returns></returns>
        </member>
        <member name="M:VirtualMind.WebAPI.Service.IExchange.GetExchangeForTransaction">
            <summary>
            Get currency exchange model for transaction
            </summary>
            <returns></returns>
        </member>
        <member name="T:VirtualMind.WebAPI.Service.DolarExchange">
            <summary>
            Dolar Exchange class
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Service.DolarExchange.#ctor(Microsoft.Extensions.Options.IOptions{VirtualMind.WebAPI.Infrastructure.Core.ExchangeProviderSettings},Microsoft.Extensions.Options.IOptions{VirtualMind.WebAPI.Infrastructure.Core.ThresholdSettings},AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Service.DolarExchange.IsCurrency(System.String)">
            <inheritdoc />
        </member>
        <member name="M:VirtualMind.WebAPI.Service.DolarExchange.GetExchange">
            <inheritdoc />
        </member>
        <member name="M:VirtualMind.WebAPI.Service.DolarExchange.GetExchangeForTransaction">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.Service.RealExchange">
            <summary>
            Real Exchange class
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Service.RealExchange.#ctor(Microsoft.Extensions.Options.IOptions{VirtualMind.WebAPI.Infrastructure.Core.ExchangeProviderSettings},Microsoft.Extensions.Options.IOptions{VirtualMind.WebAPI.Infrastructure.Core.ThresholdSettings},AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Service.RealExchange.IsCurrency(System.String)">
            <inheritdoc />
        </member>
        <member name="M:VirtualMind.WebAPI.Service.RealExchange.GetExchange">
            <inheritdoc />
        </member>
        <member name="M:VirtualMind.WebAPI.Service.RealExchange.GetExchangeForTransaction">
            <inheritdoc />
        </member>
        <member name="T:VirtualMind.WebAPI.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:VirtualMind.WebAPI.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:VirtualMind.WebAPI.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            Using Autofac here because ASP.NET Core DI does not support constrained open generics,
            For more on this:
            <see ref="https://github.com/jbogard/MediatR/wiki/Container-Feature-Support"/>
            <seealso ref="https://github.com/jbogard/MediatR/issues/305"/>
            </summary>
        </member>
        <member name="M:VirtualMind.WebAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="provider"></param>
            <param name="loggerFactory"></param>
        </member>
    </members>
</doc>
